Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_mulsi3.o)
                              timer.o (__mulsi3)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodhi4.o)
                              buffer.o (__udivmodhi4)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
                              rprintf.o (__udivmodsi4)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
                              timer.o (__divmodsi4)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
                              a2d.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
                              a2d.o (__do_clear_bss)
/usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strcat.o)
                              a2dtest.o (strcat)
/usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(itoa.o)
                              a2dtest.o (itoa)
/usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

uartReadyTx         0x1               uart.o
Timer0Reg0          0x4               timer.o
uartRxBuffer        0x8               uart.o
TimerPauseReg       0x4               timer.o
Timer2Reg0          0x4               timer.o
uartBufferedTx      0x1               uart.o
a2dCompleteFlag     0x1               a2d.o
uartTxBuffer        0x8               uart.o
uartRxOverflow      0x2               uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
LOAD a2d.o
LOAD a2dtest.o
LOAD buffer.o
LOAD rprintf.o
LOAD timer.o
LOAD uart.o
LOAD vt100.o
LOAD /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1144
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026       0x11 rprintf.o
 .progmem.data  0x00000037       0x1c timer.o
                0x00000043                TimerRTCPrescaleFactor
                0x00000037                TimerPrescaleFactor
 .progmem.data  0x00000053       0x25 vt100.o
                0x00000078                . = ALIGN (0x2)
                0x00000078                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000078        0x0 linker stubs
 *(.trampolines*)
                0x00000078                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000078                __ctors_start = .
 *(.ctors)
                0x00000078                __ctors_end = .
                0x00000078                __dtors_start = .
 *(.dtors)
                0x00000078                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000078        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
                0x00000078                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000078        0xc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000084       0x16 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
                0x00000084                __do_copy_data
 .init4         0x0000009a       0x10 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
                0x0000009a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000aa        0x4 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000ae        0x2 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
                0x000000ae                __vector_1
                0x000000ae                __vector_12
                0x000000ae                __bad_interrupt
                0x000000ae                __vector_17
                0x000000ae                __vector_2
                0x000000ae                __vector_15
                0x000000ae                __vector_10
                0x000000ae                __vector_16
                0x000000ae                __vector_18
 .text          0x000000b0       0xae a2d.o
                0x000000e4                a2dIsComplete
                0x00000116                a2dConvert8bit
                0x000000b0                a2dOff
                0x000000b6                a2dSetPrescaler
                0x000000ee                a2dConvert10bit
                0x00000142                a2dInit
                0x000000c0                a2dSetReference
                0x00000124                __vector_14
                0x000000d2                a2dSetChannel
                0x000000de                a2dStartConvert
 .text          0x0000015e       0xd8 a2dtest.o
                0x0000015e                main
 .text          0x00000236      0x156 buffer.o
                0x00000368                bufferIsNotFull
                0x00000250                bufferGetFromFront
                0x000002f0                bufferGetAtIndex
                0x000002ac                bufferDumpFromFront
                0x00000236                bufferInit
                0x00000318                bufferAddToEnd
                0x0000037e                bufferFlush
 .text          0x0000038c      0x3b2 rprintf.o
                0x00000610                rprintf1RamRom
                0x0000045e                rprintfu08
                0x00000486                rprintfu32
                0x000003ba                rprintfStr
                0x000003d6                rprintfStrLen
                0x00000426                rprintfProgStr
                0x00000470                rprintfu16
                0x0000038c                rprintfInit
                0x00000396                rprintfChar
                0x00000444                rprintfCRLF
                0x0000044a                rprintfu04
                0x000004a8                rprintfNum
 .text          0x0000073e      0x5ea timer.o
                0x0000094a                timer2GetOverflowCount
                0x0000080e                timerDetach
                0x000007a2                timer1SetPrescaler
                0x000009dc                timer1PWMBOff
                0x000007e2                timer2GetPrescaler
                0x00000b76                __vector_6
                0x00000740                timer0Init
                0x000009ce                timer1PWMAOff
                0x000009f0                timer1PWMBSet
                0x00000c84                __vector_3
                0x0000098c                timer1PWMInitICR
                0x000007b6                timer0GetPrescaler
                0x00000bd0                __vector_7
                0x00000926                timer0GetOverflowCount
                0x00000c2a                __vector_5
                0x00000cde                timerInit
                0x000007ac                timer2SetPrescaler
                0x000009b2                timer1PWMAOn
                0x00000798                timer0SetPrescaler
                0x0000073e                delay_us
                0x00000af6                __vector_4
                0x00000914                timer0ClearOverflowCount
                0x000009f6                __vector_9
                0x00000762                timer1Init
                0x0000095c                timer1PWMInit
                0x000009c0                timer1PWMBOn
                0x00000776                timer2Init
                0x00000a9c                __vector_8
                0x000009ea                timer1PWMASet
                0x000007f8                timerAttach
                0x00000d02                timer1PWMOff
                0x000007cc                timer1GetPrescaler
                0x00000938                timer2ClearOverflowCount
                0x00000824                timerPause
 .text          0x00000d28      0x24a uart.o
                0x00000f54                uartSendTxBuffer
                0x00000d70                uartSendByte
                0x00000f08                uartInitBuffers
                0x00000e98                uartReceiveByte
                0x00000e20                uartAddToTxBuffer
                0x00000da4                __vector_11
                0x00000d28                uartSetRxHandler
                0x00000e2c                __vector_13
                0x00000d82                uartFlushReceiveBuffer
                0x00000f26                uartInit
                0x00000d8c                uartReceiveBufferIsEmpty
                0x00000d32                uartSetBaudRate
                0x00000d6a                uartGetTxBuffer
                0x00000ece                uartGetByte
                0x00000d64                uartGetRxBuffer
 .text          0x00000f72       0x7c vt100.o
                0x00000fe6                vt100Init
                0x00000fbe                vt100SetAttr
                0x00000f9e                vt100SetCursorMode
                0x00000f72                vt100SetCursorPos
                0x00000fde                vt100ClearScreen
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_mulsi3.o)
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .text          0x00000fee        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x00000fee       0x16 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strcat.o)
                0x00000fee                strcat
 .text          0x00001004       0x3e /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(itoa.o)
                0x00001004                itoa
 .text          0x00001042       0x20 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x00001042                strrev
                0x00001062                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001062       0x3e /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_mulsi3.o)
                0x00001062                __mulsi3
 .text.libgcc   0x000010a0       0x28 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodhi4.o)
                0x000010a0                __udivmodhi4
 .text.libgcc   0x000010c8       0x44 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
                0x000010c8                __udivmodsi4
 .text.libgcc   0x0000110c       0x36 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
                0x0000110c                __divmodsi4
 .text.libgcc   0x00001142        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00001142        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001142        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
                0x00001142                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001142        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
                0x00001142                exit
                0x00001142                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001142        0x2 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00001144                _etext = .

.data           0x00800060        0x2 load address 0x00001144
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 a2d.o
 .data          0x00800060        0x2 a2dtest.o
 .data          0x00800062        0x0 buffer.o
 .data          0x00800062        0x0 rprintf.o
 .data          0x00800062        0x0 timer.o
 .data          0x00800062        0x0 uart.o
 .data          0x00800062        0x0 vt100.o
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_mulsi3.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strcat.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062      0x172 load address 0x00001146
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800062        0x0 a2d.o
 .bss           0x00800062        0x0 a2dtest.o
 .bss           0x00800062        0x0 buffer.o
 .bss           0x00800062        0x2 rprintf.o
 .bss           0x00800064        0xe timer.o
 .bss           0x00800072      0x141 uart.o
 .bss           0x008001b3        0x0 vt100.o
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_mulsi3.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strcat.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x008001b3        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001b3        0x1 a2d.o
                0x008001b3                a2dCompleteFlag
 COMMON         0x008001b4        0xc timer.o
                0x008001b4                Timer0Reg0
                0x008001b8                TimerPauseReg
                0x008001bc                Timer2Reg0
 COMMON         0x008001c0       0x14 uart.o
                0x008001c0                uartReadyTx
                0x008001c1                uartRxBuffer
                0x008001c9                uartBufferedTx
                0x008001ca                uartTxBuffer
                0x008001d2                uartRxOverflow
                0x008001d4                PROVIDE (__bss_end, .)
                0x00001144                __data_load_start = LOADADDR (.data)
                0x00001146                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001d4        0x0
                0x008001d4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001d4                PROVIDE (__noinit_end, .)
                0x008001d4                _end = .
                0x008001d4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x3db0
 *(.stab)
 .stab          0x00000000      0x378 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 .stab          0x00000378      0x7a4 a2d.o
                                0x7b0 (size before relaxing)
 .stab          0x00000b1c      0x48c a2dtest.o
                                0x72c (size before relaxing)
 .stab          0x00000fa8      0x660 buffer.o
                                0x924 (size before relaxing)
 .stab          0x00001608      0x9c0 rprintf.o
                                0xcf0 (size before relaxing)
 .stab          0x00001fc8      0xf54 timer.o
                               0x129c (size before relaxing)
 .stab          0x00002f1c      0x834 uart.o
                                0xb04 (size before relaxing)
 .stab          0x00003750      0x33c vt100.o
                                0x684 (size before relaxing)
 .stab          0x00003a8c       0x9c /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strcat.o)
                                 0xa8 (size before relaxing)
 .stab          0x00003b28      0x1b0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00003cd8       0xd8 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x1b97
 *(.stabstr)
 .stabstr       0x00000000     0x1b97 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(gpsrl.out elf32-avr)
LOAD linker stubs
